% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GeneSet2.R
\name{GeneSet2}
\alias{GeneSet2}
\alias{filter.GeneSet2}
\alias{select.GeneSet2}
\alias{mutate.GeneSet2}
\alias{group_by.GeneSet2}
\alias{ungroup.GeneSet2}
\alias{summarise.GeneSet2}
\alias{arrange.GeneSet2}
\title{A gene set representation as a tripple tibble}
\usage{
GeneSet2(..., active = c("geneset", "gene", "set"))

\method{filter}{GeneSet2}(.data, ...)

\method{select}{GeneSet2}(.data, ...)

\method{mutate}{GeneSet2}(.data, ...)

\method{group_by}{GeneSet2}(.data, ..., add = FALSE)

\method{ungroup}{GeneSet2}(.data, ...)

\method{summarise}{GeneSet2}(.data, ...)

\method{arrange}{GeneSet2}(.data, ...)
}
\arguments{
\item{...}{For `GeneSet2()`, named character() vectors of gene
sets. Each character vector is a gene set. The name of the
character vector is the name of the gene set.}

\item{active}{A character to indicate which tibble is active.}
}
\value{
For `GeneSet2()`, a S4 'GeneSet' object in a tripple
    tibble representation.
}
\description{
A gene set representation as a tripple tibble
}
\examples{
GeneSet2(set1 = letters, set2 = LETTERS)
gs <- GeneSet2(set1 = letters, set2 = LETTERS)
gs \%>\% gs_activate(gene) \%>\% filter(gene == "a")
gs <- GeneSet2(set1 = letters, set2 = LETTERS)
gs \%>\% select(gene)
gs <- GeneSet2(set1 = letters, set2 = LETTERS)
gs \%>\% gs_activate(set) \%>\% mutate(pval = rnorm(1:2))
gs <- GeneSet2(set1 = letters, set2 = LETTERS)
gs \%>\% group_by(gene, set)
gs <- GeneSet2(set1 = letters, set2 = LETTERS)
gs \%>\% group_by(set) \%>\% summarise(n = n()) \%>\% ungroup()
gs <- GeneSet2(set1 = letters, set2 = LETTERS)
gs \%>\% gs_activate(set) \%>\% summarise(n = n())
gs <- GeneSet2(set1 = letters, set2 = LETTERS)
gs \%>\% gs_activate(gene) \%>\% arrange(desc(gene))
}
